generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comment {
  id         Int       @id @default(autoincrement())
  sentence   String?   @db.Text
  post_id    Int?
  user_id    Int?
  created_at DateTime? @default(now()) @db.Timestamp(0)
  post       post?     @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comment_ibfk_1")
  user       user?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "comment_ibfk_2")

  @@index([post_id], map: "post_id")
  @@index([user_id], map: "user_id")
}

model post {
  id         Int        @id @default(autoincrement())
  content    String?    @db.Text
  user_id    Int?
  created_at DateTime?  @default(now()) @db.Timestamp(0)
  comment    comment[]
  user       user?      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_ibfk_1")
  reaction   reaction[]

  @@index([user_id], map: "user_id")
}

model reaction {
  id            Int   @id @default(autoincrement())
  reaction_type Int?  @db.TinyInt
  post_id       Int?
  user_id       Int?
  post          post? @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "reaction_ibfk_1")
  user          user? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "reaction_ibfk_2")

  @@index([post_id], map: "post_id")
  @@index([user_id], map: "user_id")
}

model user {
  id       Int        @id @default(autoincrement())
  username String?    @unique(map: "username") @db.VarChar(15)
  comment  comment[]
  post     post[]
  reaction reaction[]
}
